// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/adshao/ordinals-indexer/internal/data/ent/collection"
	"github.com/adshao/ordinals-indexer/internal/data/ent/inscription"
	"github.com/adshao/ordinals-indexer/internal/data/ent/schema"
	"github.com/adshao/ordinals-indexer/internal/data/ent/token"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	collectionMixin := schema.Collection{}.Mixin()
	collectionMixinFields0 := collectionMixin[0].Fields()
	_ = collectionMixinFields0
	collectionFields := schema.Collection{}.Fields()
	_ = collectionFields
	// collectionDescCreatedAt is the schema descriptor for created_at field.
	collectionDescCreatedAt := collectionMixinFields0[0].Descriptor()
	// collection.DefaultCreatedAt holds the default value on creation for the created_at field.
	collection.DefaultCreatedAt = collectionDescCreatedAt.Default.(func() time.Time)
	// collectionDescUpdatedAt is the schema descriptor for updated_at field.
	collectionDescUpdatedAt := collectionMixinFields0[1].Descriptor()
	// collection.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	collection.DefaultUpdatedAt = collectionDescUpdatedAt.Default.(func() time.Time)
	// collection.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	collection.UpdateDefaultUpdatedAt = collectionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// collectionDescP is the schema descriptor for p field.
	collectionDescP := collectionFields[1].Descriptor()
	// collection.DefaultP holds the default value on creation for the p field.
	collection.DefaultP = collectionDescP.Default.(string)
	inscriptionMixin := schema.Inscription{}.Mixin()
	inscriptionMixinFields0 := inscriptionMixin[0].Fields()
	_ = inscriptionMixinFields0
	inscriptionFields := schema.Inscription{}.Fields()
	_ = inscriptionFields
	// inscriptionDescCreatedAt is the schema descriptor for created_at field.
	inscriptionDescCreatedAt := inscriptionMixinFields0[0].Descriptor()
	// inscription.DefaultCreatedAt holds the default value on creation for the created_at field.
	inscription.DefaultCreatedAt = inscriptionDescCreatedAt.Default.(func() time.Time)
	// inscriptionDescUpdatedAt is the schema descriptor for updated_at field.
	inscriptionDescUpdatedAt := inscriptionMixinFields0[1].Descriptor()
	// inscription.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	inscription.DefaultUpdatedAt = inscriptionDescUpdatedAt.Default.(func() time.Time)
	// inscription.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	inscription.UpdateDefaultUpdatedAt = inscriptionDescUpdatedAt.UpdateDefault.(func() time.Time)
	tokenMixin := schema.Token{}.Mixin()
	tokenMixinFields0 := tokenMixin[0].Fields()
	_ = tokenMixinFields0
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescCreatedAt is the schema descriptor for created_at field.
	tokenDescCreatedAt := tokenMixinFields0[0].Descriptor()
	// token.DefaultCreatedAt holds the default value on creation for the created_at field.
	token.DefaultCreatedAt = tokenDescCreatedAt.Default.(func() time.Time)
	// tokenDescUpdatedAt is the schema descriptor for updated_at field.
	tokenDescUpdatedAt := tokenMixinFields0[1].Descriptor()
	// token.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	token.DefaultUpdatedAt = tokenDescUpdatedAt.Default.(func() time.Time)
	// token.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	token.UpdateDefaultUpdatedAt = tokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tokenDescP is the schema descriptor for p field.
	tokenDescP := tokenFields[1].Descriptor()
	// token.DefaultP holds the default value on creation for the p field.
	token.DefaultP = tokenDescP.Default.(string)
}
