// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CollectionsColumns holds the columns for the "collections" table.
	CollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "tick", Type: field.TypeString},
		{Name: "p", Type: field.TypeString, Default: "brc-721"},
		{Name: "max", Type: field.TypeUint64},
		{Name: "supply", Type: field.TypeUint64},
		{Name: "base_uri", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "image", Type: field.TypeString},
		{Name: "attributes", Type: field.TypeJSON},
		{Name: "tx_hash", Type: field.TypeString},
		{Name: "block_height", Type: field.TypeUint64},
		{Name: "block_time", Type: field.TypeTime},
		{Name: "address", Type: field.TypeString},
		{Name: "inscription_id", Type: field.TypeInt64, Unique: true},
		{Name: "inscription_uid", Type: field.TypeString, Unique: true},
	}
	// CollectionsTable holds the schema information for the "collections" table.
	CollectionsTable = &schema.Table{
		Name:       "collections",
		Columns:    CollectionsColumns,
		PrimaryKey: []*schema.Column{CollectionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "collection_p_tick",
				Unique:  true,
				Columns: []*schema.Column{CollectionsColumns[4], CollectionsColumns[3]},
			},
			{
				Name:    "collection_tx_hash",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[12]},
			},
			{
				Name:    "collection_block_height",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[13]},
			},
			{
				Name:    "collection_inscription_id",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[16]},
			},
			{
				Name:    "collection_address",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[15]},
			},
		},
	}
	// InscriptionsColumns holds the columns for the "inscriptions" table.
	InscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "inscription_id", Type: field.TypeInt64, Unique: true},
		{Name: "uid", Type: field.TypeString, Unique: true},
		{Name: "address", Type: field.TypeString},
		{Name: "output_value", Type: field.TypeUint64},
		{Name: "content_length", Type: field.TypeUint64},
		{Name: "content_type", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "genesis_height", Type: field.TypeUint64},
		{Name: "genesis_fee", Type: field.TypeUint64},
		{Name: "genesis_tx", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
		{Name: "output", Type: field.TypeString},
		{Name: "offset", Type: field.TypeUint64},
	}
	// InscriptionsTable holds the schema information for the "inscriptions" table.
	InscriptionsTable = &schema.Table{
		Name:       "inscriptions",
		Columns:    InscriptionsColumns,
		PrimaryKey: []*schema.Column{InscriptionsColumns[0]},
	}
	// TokensColumns holds the columns for the "tokens" table.
	TokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "tick", Type: field.TypeString, Unique: true},
		{Name: "p", Type: field.TypeString, Default: "brc-721"},
		{Name: "token_id", Type: field.TypeUint64},
		{Name: "tx_hash", Type: field.TypeString},
		{Name: "block_height", Type: field.TypeUint64},
		{Name: "block_time", Type: field.TypeTime},
		{Name: "address", Type: field.TypeString},
		{Name: "inscription_id", Type: field.TypeInt64, Unique: true},
		{Name: "inscription_uid", Type: field.TypeString, Unique: true},
		{Name: "collection_tokens", Type: field.TypeInt, Nullable: true},
	}
	// TokensTable holds the schema information for the "tokens" table.
	TokensTable = &schema.Table{
		Name:       "tokens",
		Columns:    TokensColumns,
		PrimaryKey: []*schema.Column{TokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tokens_collections_tokens",
				Columns:    []*schema.Column{TokensColumns[12]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "token_p_tick_token_id",
				Unique:  true,
				Columns: []*schema.Column{TokensColumns[4], TokensColumns[3], TokensColumns[5]},
			},
			{
				Name:    "token_address",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[9]},
			},
			{
				Name:    "token_tx_hash",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[6]},
			},
			{
				Name:    "token_inscription_id",
				Unique:  true,
				Columns: []*schema.Column{TokensColumns[10]},
			},
			{
				Name:    "token_block_height",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[7]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CollectionsTable,
		InscriptionsTable,
		TokensTable,
	}
)

func init() {
	TokensTable.ForeignKeys[0].RefTable = CollectionsTable
}
